{"ast":null,"code":"var _jsxFileName = \"/Users/ajaysah/Library/CloudStorage/OneDrive-LUTUniversity/Final_Project/client/src/components/ChatInput.js\",\n  _s = $RefreshSig$();\n// File: ChatInput.js\n// This component represents the input area for sending messages in the chat display.\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  user,\n  clickedUser,\n  getUserMessages,\n  getClickedUsersMessages\n}) => {\n  _s();\n  // State variables and functions...\n  const [textArea, setTextArea] = useState(\"\");\n  const userId = user === null || user === void 0 ? void 0 : user.user_id;\n  const clickedUserId = clickedUser === null || clickedUser === void 0 ? void 0 : clickedUser.user_id;\n  const addMessage = async () => {\n    const message = {\n      timestamp: new Date().toISOString(),\n      from_userId: userId,\n      to_userId: clickedUserId,\n      message: textArea\n    };\n    try {\n      await axios.post('http://localhost:8000/message', {\n        message\n      });\n      getUserMessages();\n      getClickedUsersMessages();\n      setTextArea(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // JSX for chat input...\n    _jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: textArea,\n        onChange: e => setTextArea(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary-button\",\n        onClick: addMessage,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(ChatInput, \"4eY01J2zdQ3jgJyvFt1ScRxGpfs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatInput","user","clickedUser","getUserMessages","getClickedUsersMessages","_s","textArea","setTextArea","userId","user_id","clickedUserId","addMessage","message","timestamp","Date","toISOString","from_userId","to_userId","post","error","console","log","className","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ajaysah/Library/CloudStorage/OneDrive-LUTUniversity/Final_Project/client/src/components/ChatInput.js"],"sourcesContent":["// File: ChatInput.js\n// This component represents the input area for sending messages in the chat display.\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ChatInput = ({ user, clickedUser, getUserMessages, getClickedUsersMessages }) => {\n    // State variables and functions...\n    const [textArea, setTextArea] = useState(\"\")\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n\n    const addMessage = async () => {\n        const message = {\n            timestamp: new Date().toISOString(),\n            from_userId: userId,\n            to_userId: clickedUserId,\n            message: textArea\n        }\n\n        try {\n            await axios.post('http://localhost:8000/message', { message })\n            getUserMessages()\n            getClickedUsersMessages()\n            setTextArea(\"\")\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    \n    return (\n        // JSX for chat input...\n        <div className=\"chat-input\">\n            <textarea value={textArea} onChange={(e) => setTextArea(e.target.value)}/>\n            <button className=\"secondary-button\" onClick={addMessage}>Submit</button>\n        </div>\n    );\n};\n\nexport default ChatInput;"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,eAAe;EAAEC;AAAwB,CAAC,KAAK;EAAAC,EAAA;EACnF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,MAAM,GAAGP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,OAAO;EAC5B,MAAMC,aAAa,GAAGR,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,OAAO;EAE1C,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,OAAO,GAAG;MACZC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCC,WAAW,EAAER,MAAM;MACnBS,SAAS,EAAEP,aAAa;MACxBE,OAAO,EAAEN;IACb,CAAC;IAED,IAAI;MACA,MAAMT,KAAK,CAACqB,IAAI,CAAC,+BAA+B,EAAE;QAAEN;MAAQ,CAAC,CAAC;MAC9DT,eAAe,CAAC,CAAC;MACjBC,uBAAuB,CAAC,CAAC;MACzBG,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED;IAAA;IACI;IACApB,OAAA;MAAKuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvBxB,OAAA;QAAUyB,KAAK,EAAElB,QAAS;QAACmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC1EhC,OAAA;QAAQuB,SAAS,EAAC,kBAAkB;QAACU,OAAO,EAAErB,UAAW;QAAAY,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE;EAAC;AAEd,CAAC;AAAC1B,EAAA,CA/BIL,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}